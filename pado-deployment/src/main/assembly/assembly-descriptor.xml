<assembly xmlns="http://maven.apache.org/ASSEMBLY/2.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/ASSEMBLY/2.0.0 http://maven.apache.org/xsd/assembly-2.0.0.xsd">
	<id>id.pado-assembly</id>
	<formats>
		<format>zip</format>
		<format>tar.gz</format>
	</formats>
	<includeBaseDirectory>true</includeBaseDirectory>
	<baseDirectory>pado_${pado.version}</baseDirectory>
	<dependencySets>
		<!-- <dependencySet> <useProjectArtifact>false</useProjectArtifact> <includes> 
			<include>com.netcrest.pado:pado-javadoc</include> </includes> <outputDirectory>doc</outputDirectory> 
			</dependencySet> -->
		<dependencySet>
			<useProjectArtifact>false</useProjectArtifact>
			<excludes>
				<exclude>com.netcrest.pado:pado-biz</exclude>
				<exclude>com.netcrest.pado:pado-biz-gemfire</exclude>
				<exclude>com.netcrest.pado:pado-test</exclude>
				<exclude>com.netcrest.pado:pado-rpc-biz</exclude>
				<exclude>com.netcrest.pado:pado-tools-hazelcast-*</exclude>
				<exclude>com.gemstone.gemfire:gemfire</exclude>
				<exclude>antlr:antlr</exclude>
				<exclude>commons-io*</exclude>
				<exclude>dom4j*</exclude>
				<exclude>hamcrest*</exclude>
				<exclude>jackson*</exclude>
				<exclude>jansi*</exclude>
				<exclude>log4j*</exclude>
				<exclude>xml-apis*</exclude>
				<exclude>xom*</exclude>
			</excludes>
			<outputDirectory>lib/</outputDirectory>
		</dependencySet>

		<dependencySet>
			<useProjectArtifact>false</useProjectArtifact>
			<includes>
				<include>com.netcrest.pado:pado-biz</include>
				<include>com.netcrest.pado:pado-biz-gemfire</include>
				<include>com.netcrest.pado:pado-test</include>
				<include>com.netcrest.pado:pado-rpc-biz</include>
			</includes>
			<outputDirectory>plugins</outputDirectory>
		</dependencySet>
	</dependencySets>

	<files>
		<!-- Collect Hazelcast version specifics -->
		<file>
			<outputDirectory>lib/hazelcast/v3</outputDirectory>
			<source>../pado-tools-hazelcast-3/target/pado-tools-hazelcast-3.jar</source>
			<destName>pado-tools-hazelcast-3-${project.version}.jar</destName>
		</file>
		<file>
			<outputDirectory>lib/hazelcast/v4</outputDirectory>
			<source>../pado-tools-hazelcast-4/target/pado-tools-hazelcast-4.jar</source>
			<destName>pado-tools-hazelcast-4-${project.version}.jar</destName>
		</file>
	</files>
	<fileSets>
		<!-- Collect all resources -->
		<fileSet>
			<directory>src/main/resources</directory>
			<excludes>
				<exclude>bin_sh/**</exclude>
				<exclude>doc/**</exclude>
				<exclude>etc/create_dtd_java</exclude>
			</excludes>
			<outputDirectory>
			</outputDirectory>
		</fileSet>

		<!-- Collect all rpc resources -->
		<fileSet>
			<directory>../pado-rpc/src/resources/java</directory>
			<outputDirectory>
			lang/java
			</outputDirectory>
			<excludes>
				<exclude>bin_sh/**</exclude>
			</excludes>
		</fileSet>
		<fileSet>
			<directory>../pado-rpc/src/resources/python</directory>
			<outputDirectory>
			lang/python
			</outputDirectory>
			<excludes>
				<exclude>bin_sh/**</exclude>
			</excludes>
		</fileSet>

		<!-- Collect rpc language specifics -->
		<fileSet>
			<directory>target/assembly</directory>
			<outputDirectory>lang/python/lib</outputDirectory>
			<includes>
				<include>pado-rpc-py.zip</include>
			</includes>
		</fileSet>

		<!-- Place Python code in local-packages -->
		<fileSet>
			<directory>../pado-rpc/src/main/python</directory>
			<outputDirectory>lang/python/local-packages</outputDirectory>
			<excludes>
				<exclude>**/__pycache__/**</exclude>
			</excludes>
		</fileSet>

		<!-- Executable permissions -->
		<fileSet>
			<directory>../pado-rpc/src/resources/java/bin_sh</directory>
			<outputDirectory>lang/java/bin_sh</outputDirectory>
			<includes>
				<include>**</include>
			</includes>
			<fileMode>0755</fileMode>
			<directoryMode>0755</directoryMode>
		</fileSet>
		<fileSet>
			<directory>../pado-rpc/src/resources/python/bin_sh</directory>
			<outputDirectory>lang/python/bin_sh</outputDirectory>
			<includes>
				<include>**</include>
			</includes>
			<fileMode>0755</fileMode>
			<directoryMode>0755</directoryMode>
		</fileSet>
		<fileSet>
			<directory>src/main/resources/bin_sh</directory>
			<outputDirectory>bin_sh</outputDirectory>
			<includes>
				<include>**</include>
			</includes>
			<fileMode>0755</fileMode>
			<directoryMode>0755</directoryMode>
		</fileSet>


		<fileSet>
			<directory>..</directory>
			<includes>
				<include>license/**</include>
				<include>LICENSE.txt</include>
				<include>NOTICE</include>
				<include>RELEASE_NOTES.txt</include>
			</includes>
			<outputDirectory>.</outputDirectory>
		</fileSet>

		<!-- Create the required empty directories -->
		<fileSet>
			<directory>./</directory>
			<outputDirectory>bundle</outputDirectory>
			<excludes>
				<exclude>*/**</exclude>
			</excludes>
		</fileSet>
		<fileSet>
			<directory>./</directory>
			<outputDirectory>log</outputDirectory>
			<excludes>
				<exclude>*/**</exclude>
			</excludes>
		</fileSet>
		<fileSet>
			<directory>./</directory>
			<outputDirectory>stats</outputDirectory>
			<excludes>
				<exclude>*/**</exclude>
			</excludes>
		</fileSet>
		<fileSet>
			<directory>./</directory>
			<outputDirectory>lib/app</outputDirectory>
			<excludes>
				<exclude>*/**</exclude>
			</excludes>
		</fileSet>
		<fileSet>
			<directory>./</directory>
			<outputDirectory>lang/java/lib</outputDirectory>
			<excludes>
				<exclude>*/**</exclude>
			</excludes>
		</fileSet>
	</fileSets>

</assembly>
